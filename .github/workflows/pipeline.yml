name: 🚀 Deploy Infrastructure and Applications 🌐

on:
  push:
    branches:
      - main

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest

    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v2

    - name: 🏗️ Set up Terraform
      uses: hashicorp/setup-terraform@v1

    - name: 🌍 Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: 📋 Terraform Plan
      id: plan
      run: terraform plan -out=tfplan
      working-directory: ./terraform

    - name: 🚀 Terraform Apply
      if: steps.plan.outcome == 'success'
      id: apply
      run: terraform apply -auto-approve tfplan
      working-directory: ./terraform

    - name: 🎉 Felicitaciones 🎉
      if: success()
      run: echo "¡Felicitaciones! La infraestructura se ha desplegado correctamente."

  deploy-applications:
    needs: deploy-infrastructure
    runs-on: ubuntu-latest

    steps:
    - name: 🛠️ Checkout code
      uses: actions/checkout@v2

    - name: 🛡️ Set up kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: 📄 Get Kubeconfig
      run: aws eks update-kubeconfig --name DevOpsGroup7 --region us-east-1

    - name: 📊 Deploy Grafana
      run: |
        kubectl apply -f manifests/persistent_volume_grafana.yaml
        kubectl apply -f manifests/persistent_volume_claim_grafana.yaml
        kubectl apply -f manifests/grafana-deployment.yaml
        kubectl apply -f manifests/grafana-service.yaml

    - name: 📈 Deploy Prometheus
      run: |
        kubectl apply -f manifests/persistent_volume_prometheus.yaml
        kubectl apply -f manifests/persistent_volume_claim_prometheus.yaml
        kubectl apply -f manifests/prometheus-deployment.yaml
        kubectl apply -f manifests/prometheus-service.yaml

    - name: 🌐 Deploy NGINX
      run: |
        kubectl apply -f manifests/persistent_volume_nginx.yaml
        kubectl apply -f manifests/persistent_volume_claim_nginx.yaml
        kubectl apply -f manifests/nginx-deployment.yaml
        kubectl apply -f manifests/nginx-service.yaml

    - name: 🔍 Verify Deployment
      run: |
        kubectl get pods
        kubectl get services

    - name: 🎉 Felicitaciones 🎉
      if: success()
      run: |
        echo "¡Felicitaciones! Las aplicaciones se han desplegado correctamente."
        echo "Puedes acceder a NGINX en la siguiente URL: http://$(kubectl get svc nginx-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')"
