name: "Continuous Integration"
on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

env:
  REGISTRY: 408391645530.dkr.ecr.us-east-1.amazonaws.com
  IMAGE_NAME: sam-tributario-frontend

jobs:
  build-pr-image:
    name: Build PR Image
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}

      - name: Build
        uses: docker/build-push-action@v5
        with:
          push: true
          context: sam
          file: sam/Dockerfile
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}:${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  build-image:
    name: Build Image
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: read # for actions/checkout to fetch code
      pull-requests: write # needed to create and update comments in PRs

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # TODO: Disabled due to arm64 build is too slow!
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to ECR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          flavor: |
            latest=false
          tags: |
            #latest tag only on develop
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
            type=sha,priority=100,prefix=,suffix=,format=short,enable=true            
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: sam
          file: sam/Dockerfile
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
          # TODO: Use this one when arm64 build faster.
          # platforms: linux/amd64,linux/arm64,linux/arm/v7

  update-gitops-repo:
    name: Update SAM Versions
    if: github.event_name != 'pull_request'
    needs: [build-image]
    runs-on: ubuntu-latest
    timeout-minutes: 2

    permissions:
      contents: read # for actions/checkout to fetch code

    steps:
      - uses: actions/checkout@v4
        with:
          repository: 'MuniCordoba/sam-gitops'
          token: ${{ secrets.MUNI_GITHUB_PAT }}
          ref: nueva-infra

      - name: Update version
        run: |
            sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/download/v4.33.3/yq_linux_amd64
            sudo chmod a+x /usr/local/bin/yq

            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"

            if [ "${GITHUB_REF_TYPE}" == "tag" ]; then
              export TAG=$(echo "${GITHUB_REF_NAME}" | sed -r 's/v//g')
            else
              export TAG=$(echo "${GITHUB_SHA}" | head -c7)
            fi

            for file in $(find ./apps/sam -name values* ! -name values.yaml ! -name values-local.yaml); do
              echo "Updating sam tributario frontend version ${TAG} in file ${file}"
              yq . $file > /tmp/temp1.yaml
              yq '.frontend.image.tag = strenv(TAG)' $file > /tmp/temp2.yaml

              set +e
              diff /tmp/temp1.yaml /tmp/temp2.yaml > /tmp/temp.diff
              set -e

              patch -o /tmp/new.yaml $file < /tmp/temp.diff
              cp /tmp/new.yaml $file
            done

            git commit -a -m "GitHub Action Bot - Update sam tributario frontend to version: ${TAG}"

      - name: Push changes to GitOps repository
        uses: ad-m/github-push-action@master
        with:
            repository: 'MuniCordoba/sam-gitops'
            github_token: ${{ secrets.MUNI_GITHUB_PAT }}
            branch: nueva-infra
            force: true